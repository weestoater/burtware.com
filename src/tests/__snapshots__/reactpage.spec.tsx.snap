// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing React page can render ReactPage 1`] = `
<div>
  <div
    class="row"
  >
    <div
      class="col-sm-12"
    >
      <h1
        class="visually-hidden"
      >
        React stuff
      </h1>
    </div>
    <div
      class="col-lg-4 col-md-6 mb-4"
    >
      <div
        class="card"
      >
        <div
          class="card-header"
        >
          <i
            class="bi bi-filetype-jsx"
          />
          <span
            class="pl-4"
          >
            Random Users API
          </span>
        </div>
        <div
          class="card-body users"
        >
          <div
            class="row"
          >
            <div
              class="d-flex justify-content-center"
            >
              <div
                class="spinner-border"
                role="status"
              />
            </div>
            <br />
            <span
              class="text-center"
            >
              Loading...
            </span>
          </div>
        </div>
      </div>
    </div>
    <div
      class="col-lg-4 col-md-6 mb-4"
    >
      <div
        class="card"
      >
        <div
          class="card-header"
        >
          <i
            class="bi bi-filetype-jsx"
          />
          <span
            class="pl-4"
          >
            hooks
          </span>
        </div>
        <div
          class="card-body"
        >
          <p>
            Since moving teams and re-learning Angular I’ve had the chance to work recently on a rather nice ReactJS project. It gave me my first real exposure to full stack development and I have to say, whilst terrified, I felt well chuffed when it was all done – with help of a couple of amazing colleagues.
          </p>
          <p>
            The really sweet part was using React Hooks for the first time. Rather than wrestling with state and setState it was just a simple useEffect and useState which was a revelation. So nice.
          </p>
          <p>
            Never felt entirely comfortable mixing mark-up and functions, that was a bit of a hurdle to overcome. Then the whole state and setState really grinds my gears too.
          </p>
          <div
            class="code-sample"
          >
            <p>
              fetch('/api/getNachos')
              <br />
                .then(response =&gt; response.json())
              <br />
                .then(data =&gt; this.setState({data}));
            </p>
          </div>
          <p>
            Instead it’s a nice simple case of creating a fetch.js service file for carrying out the api calls. Then a really clean and simple few lines to set up the object for using on the page.
          </p>
          <div
            class="code-sample"
          >
            <p>
              const [data, setData] = useState(null);
              <br />
              useEffect( () =&gt; {
              <br />
                  getData().then(setData);
              <br />
              }, []);
            </p>
          </div>
          <p>
            I personally find this a lot cleaner and nicer to work with. A plus side is also the test-ability of it, which matters to me as it’s a key part of my employers ethos.
          </p>
        </div>
      </div>
    </div>
    <div
      class="col-lg-4 col-md-6 mb-4"
    >
      <div
        class="card"
      >
        <div
          class="card-header"
        >
          <i
            class="bi bi-filetype-jsx"
          />
          <span
            class="pl-4"
          >
            my experiences
          </span>
        </div>
        <div
          class="card-body"
        >
          <p>
            There are as many ways to do Single Page Applications (SPAs) as there are developers with opinions. Within my work we have many instances of AngularJS, Angular (4,5,6,7,9,11,12) and ReactJS.
          </p>
          <p>
            My experience with ReactJS began as pretty limited, but with a strong following wind, a few cups of coffee and a Pluralsight subscription – I resolved that in no small measure.
          </p>
          <p>
            Before moving recently to pure UX team, I worked on a growing React platform which included multiple chart and grid offerings.
          </p>
          <p>
            I am now trying to get my head around the worlds of 
            <code>
              typescript
            </code>
            ; micro-services and AWS with React.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;
